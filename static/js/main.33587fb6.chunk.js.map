{"version":3,"sources":["components/Order/img/edit.svg","components/Order/img/cancel.svg","components/Header/CreateButton.js","components/Header/Header.js","contexts/ordersContext.js","components/Order/Card.js","components/Order/Order.js","components/Modal/Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","styled","NavLink","displayName","CreateButton","React","useState","uuidv4","newId","setNewId","to","pathname","id","onClick","HeaderWrapper","header","Title","h1","Header","ordersContext","createContext","OrdersProvider","props","name","price","notes","orders","setOrders","value","useMemo","Provider","useOrders","context","useContext","Error","ItemWrapper","li","Item","span","bold","width","wrap","css","ButtonWrapper","div","EditButton","url","CancelButton","Card","editImage","cancelImage","filter","order","handleCancel","OrderContainer","ListWrapper","ul","Order","map","key","reducer","state","action","type","payload","Overlay","FormWrapper","Form","form","Label","label","Input","input","TextArea","textarea","ButtonsWrapper","StyledLink","primary","Modal","location","currentOrder","find","initialState","useReducer","dispatch","placeholder","onChange","e","target","some","AppContainer","section","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.33587fb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.fce92e01.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.dc3c04df.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst CreateButton = () => {\n  const [newId, setNewId] = React.useState(uuidv4());\n  const handleClick = () => setNewId(uuidv4());\n  return (\n    <Button to={{ pathname: '/order', id: newId }} onClick={handleClick}>\n      New Order\n    </Button>\n  );\n};\n\nconst Button = styled(NavLink)`\n  align-self: flex-end;\n  font-size: 1rem;\n  height: 2rem;\n  line-height: 2rem;\n  -webkit-background-clip: padding-box;\n  background-image: linear-gradient(\n    to left,\n    rgb(255, 21, 211),\n    rgb(245, 72, 125) 10%,\n    rgb(246, 105, 108) 50%,\n    rgb(246, 147, 85)\n  );\n  background-clip: padding-box;\n  padding: 0rem 0.75rem;\n  margin: 0.75rem 0.5rem 0 0;\n  border-radius: 1rem;\n  color: white;\n  &:hover {\n    transform: translate(-1%, -2%);\n  }\n  &:active {\n    transform: translate(-1%, 1%);\n  }\n  transition: all 0.1s;\n  backface-visibility: hidden;\n\n  // remove styles of <NavLink>\n  text-decoration: none;\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\nButton.displayName = 'Button';\nexport default CreateButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport CreateButton from './CreateButton';\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <Title>Daily Drinks</Title>\n      <CreateButton />\n    </HeaderWrapper>\n  );\n};\n\nconst HeaderWrapper = styled.header`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 2.5rem 0 0 0;\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  text-align: center;\n  color: transparent;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-image: linear-gradient(\n    to left,\n    rgb(255, 21, 211),\n    rgb(245, 72, 125) 10%,\n    rgb(246, 105, 108) 50%,\n    rgb(246, 147, 85)\n  );\n`;\nTitle.displayName = 'Title';\nexport default Header;\n","import React from 'react';\n\nconst ordersContext = React.createContext();\n\nfunction useOrders() {\n  const context = React.useContext(ordersContext);\n\n  if (!context) {\n    throw new Error('useOrders must be used within a OrdersProvider');\n  }\n\n  return context;\n}\n\nfunction OrdersProvider(props) {\n  const [orders, setOrders] = React.useState([\n    { name: '百香多多綠茶', id: '1', price: 35, notes: '少冰' },\n    { name: '四季春青茶', id: '2', price: 25, notes: '去冰\\n微糖' }\n  ]);\n\n  const value = React.useMemo(() => [orders, setOrders], [orders]);\n\n  return <ordersContext.Provider value={value} {...props} />;\n}\n\nexport default { OrdersProvider, useOrders };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\n\nimport ordersContext from '../../contexts/ordersContext';\nimport editImage from './img/edit.svg';\nimport cancelImage from './img/cancel.svg';\n\nconst Card = ({ name, price, notes, id }) => {\n  const [orders, setOrders] = ordersContext.useOrders();\n\n  const handleCancel = id => {\n    setOrders(orders => orders.filter(order => order.id !== id));\n  };\n\n  return (\n    <>\n      <ItemWrapper>\n        <Item bold width='40%' name='name'>\n          {name}\n        </Item>\n        <Item width='10%' name='price'>\n          {price}\n        </Item>\n        <Item width='30%' wrap='true' name='notes'>\n          {notes}\n        </Item>\n        <ButtonWrapper>\n          <EditButton url={editImage} to={{ pathname: '/order', id: id }} />\n          <CancelButton url={cancelImage} onClick={() => handleCancel(id)} />\n        </ButtonWrapper>\n      </ItemWrapper>\n    </>\n  );\n};\n\nconst ItemWrapper = styled.li`\n  position: relative;\n  width: 100%;\n  min-height: 5em;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  color: rgb(21, 37, 67);\n  background-color: white;\n  border-radius: 0.25rem;\n  padding: 1.25rem;\n  box-shadow: 0 0 0.875rem 0 rgba(53, 64, 82, 0.05);\n  &:not(:last-child) {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Item = styled.span`\n  font-weight: ${props => (props.bold ? 'bold' : 'normal')};\n  width: ${props => props.width};\n  padding: 0.5rem;\n  ${props =>\n    props.wrap &&\n    css`\n      white-space: pre-wrap;\n    `}\n`;\nItem.displayName = 'Item';\n\nconst ButtonWrapper = styled.div`\n  width: 20%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst EditButton = styled(NavLink)`\n  width: 1.75rem;\n  height: 1.75rem;\n  background: url(${props => props.url}) no-repeat;\n  cursor: pointer;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`;\nEditButton.displayName = 'EditButton';\n\nconst CancelButton = styled.span`\n  width: 1.75rem;\n  height: 1.75rem;\n  background: url(${props => props.url}) no-repeat;\n  cursor: pointer;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n`;\nCancelButton.displayName = 'CancelButton';\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport ordersContext from '../../contexts/ordersContext';\nimport Card from './Card';\n\nconst Order = () => {\n  const [orders, setOrders] = ordersContext.useOrders();\n\n  return (\n    <OrderContainer>\n      <ListWrapper>\n        {orders.map(order => (\n          <Card key={order.id} {...order} />\n        ))}\n      </ListWrapper>\n    </OrderContainer>\n  );\n};\n\nconst OrderContainer = styled.div`\n  width: 100%;\n`;\n\nconst ListWrapper = styled.ul`\n  width: 100%;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default Order;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport ordersContext from '../../contexts/ordersContext';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'setName':\n      return { ...state, name: action.payload };\n    case 'setPrice':\n      return { ...state, price: action.payload };\n    case 'setNotes':\n      return { ...state, notes: action.payload };\n    default:\n      throw new Error(`Invalid action type: ${action.type}`);\n  }\n}\n\nconst Modal = props => {\n  const id = props.location.id;\n  const [orders, setOrders] = ordersContext.useOrders();\n\n  const currentOrder = orders.find(order => order.id === id);\n  const initialState = currentOrder\n    ? { name: currentOrder.name, price: currentOrder.price, notes: currentOrder.notes }\n    : { name: '', price: '', notes: '' };\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const handleConfirm = () => {\n    if (orders.some(order => order.id === id)) {\n      // replace existing order\n      setOrders(orders => orders.map(order => (order.id === id ? { id, ...state } : order)));\n    } else {\n      // add new order\n      setOrders(orders => [...orders, { id, ...state }]);\n    }\n  };\n\n  return (\n    <Overlay>\n      <FormWrapper>\n        <Form>\n          <Label>\n            Name:\n            <Input\n              value={state.name}\n              placeholder='百香多多綠茶'\n              onChange={e => dispatch({ type: 'setName', payload: e.target.value })}\n              name='name'\n            />\n          </Label>\n          <Label>\n            Price:\n            <Input\n              value={state.price}\n              placeholder='35'\n              onChange={e => dispatch({ type: 'setPrice', payload: e.target.value })}\n              name='price'\n            />\n          </Label>\n          <Label>\n            Notes:\n            <TextArea\n              value={state.notes}\n              placeholder='半糖去冰'\n              onChange={e => dispatch({ type: 'setNotes', payload: e.target.value })}\n              name='notes'\n            />\n          </Label>\n        </Form>\n\n        <ButtonsWrapper>\n          <StyledLink to='/'>Cancel</StyledLink>\n          <StyledLink primary='true' to='/' onClick={handleConfirm} name='confirm'>\n            Confirm\n          </StyledLink>\n        </ButtonsWrapper>\n      </FormWrapper>\n    </Overlay>\n  );\n};\n\nconst Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 1;\n  top: 0;\n`;\nOverlay.displayName = 'Overlay';\n\nconst FormWrapper = styled.div`\n  max-width: 400px;\n  min-width: 320px;\n  width: 80%;\n  min-height: 320px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #fff;\n  border-radius: 0.3rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem;\n`;\n\nconst Label = styled.label`\n  width: 100%;\n  margin: 0.5rem 0;\n  font-weight: bold;\n`;\nLabel.displayName = 'Label';\n\nconst Input = styled.input`\n  margin: 6px 0;\n  max-width: 100%;\n  width: 100%;\n  flex: 1 0 auto;\n  outline: 0;\n  padding: 10px 16px;\n  background: rgb(238, 240, 243);\n  border: 0;\n  color: rgb(21, 37, 67);\n  border-radius: 0.25rem;\n  transition: box-shadow 0.1s ease, border-color 0.1s ease, -webkit-box-shadow 0.1s ease;\n  box-shadow: none;\n`;\nInput.displayName = 'Input';\n\nconst TextArea = styled.textarea`\n  margin: 6px 0;\n  max-width: 100%;\n  width: 100%;\n  flex: 1 0 auto;\n  outline: 0;\n  padding: 10px 16px;\n  background: rgb(238, 240, 243);\n  border: 0;\n  color: rgb(21, 37, 67);\n  border-radius: 0.28571429rem;\n  transition: box-shadow 0.1s ease, border-color 0.1s ease, -webkit-box-shadow 0.1s ease;\n  box-shadow: none;\n`;\nTextArea.displayName = 'TextArea';\n\nconst ButtonsWrapper = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  border-top: 2px solid #e8e8e8;\n  align-self: flex-end;\n`;\n\nconst StyledLink = styled(NavLink)`\n  flex: 1;\n  padding: 1rem;\n  color: ${props => (props.primary ? '#fff' : 'rgb(21,37,67)')};\n  background: ${props => (props.primary ? 'rgb(21,37,67)' : '#fff')};\n  text-align: center;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.1s;\n  &:first-child {\n    border-bottom-left-radius: 0.3rem;\n  }\n  &:last-child {\n    border-bottom-right-radius: 0.3rem;\n  }\n  &:not(:last-child) {\n    border-right: 2px solid #e8e8e8;\n  }\n  &:hover {\n    background: ${props => (props.primary ? 'rgb(12, 29, 62)' : '#f3f3f3')};\n  }\n\n  // remove styles of <NavLink>\n  text-decoration: none;\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\nStyledLink.displayName = 'StyledLink';\n\nexport default Modal;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { HashRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Header from './components/Header/Header';\nimport Order from './components/Order/Order';\nimport Modal from './components/Modal/Modal';\n\nimport ordersContext from './contexts/ordersContext';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <ordersContext.OrdersProvider>\n        <AppContainer>\n          <Header />\n          <Order />\n          <Route exact path='/order' component={Modal} />\n        </AppContainer>\n      </ordersContext.OrdersProvider>\n    </HashRouter>\n  );\n}\n\nconst AppContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f5f9fc;\n  min-height: 100vh;\n  @media (min-width: 768px) {\n    padding: 0 10%;\n  }\n  @media (min-width: 922px) {\n    padding: 0 20%;\n  }\n`;\nAppContainer.displayName = 'AppContainer';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}